# -*- coding: utf-8 -*-
"""projeto_POO_Italo_ADS2_.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1u2MW0I8cgMimSZLTkvkhYjnLp9nSXTvF
"""

# Italo Rian alves da silva
# RGM 39021483

# Quis representar como seria uma cria√ß√£o de festa usando o essencial de como uma pessoa avaliaria uma festa
# Os gostos ds usuarios s√£o usados como relevancia a distancia que a pessoa de deslocou a ir para festa e seus gsotsos pessoais

# üéâ CAP√çTULO 0: Importa√ß√£o da diver√ß√£o (importado biblioteca)
#importando uma biblioteca "random"(aleatorio) e as funcionalidades da bibliboteca choice, sample, randint
from random import choice, sample, randint

# üéØ CAP√çTULO 0.1: Nomes dos festeiros (convidados)
#aqui foi criada uma lista com o nome de todos os usuarios que podem ser adicionados na festa
nomes_possiveis = [
    "Dust", "Ori", "Shovel Knight", "The Knight", "Filia", "Madeline", "Cerebella", "Horace",
    "CommanderVideo", "Juan", "Isaac", "Grim Fandango", "Josef", "Quote", "Meat Boy", "Peacock",
    "Bard", "Solaire of Astora", "Zagreus", "Ms. Fortune", "Hat Kid", "Cereza", "Max", "Chloe",
    "Vi", "Mae Borowski", "Shelly", "Niko", "The Drifter", "Mina", "Rogue", "Isabela", "Gabriel",
    "Laura", "Matheus", "Fernanda", "Rafael", "Camila", "Daniel", "Larissa", "Bruno", "Amanda",
    "Thiago", "Juliana", "Felipe", "Patr√≠cia", "Gustavo", "Carolina", "Eduardo", "M√¥nica", "Marcelo",
    "Vanessa", "Ricardo", "Silvia", "Andr√©", "Aline", "Roberto", "Paula", "Vin√≠cius", "Clara",
    "Davi", "Nat√°lia", "Artur", "L√≠via", "Guilherme", "Vit√≥ria", "Alexandre", "Luana", "Miguel",
    "Marcela", "Renan", "Evelyn", "F√°bio", "Let√≠cia", "Leonardo", "Raquel", "S√©rgio", "Renata",
    "Caio", "Bianca", "Rodrigo", "Priscila", "Victor"
]
# aqui temos varias listas como a lista de musicas da festa
#lista de algumas comidas que podem ser do gosto do pessoal
estilos_musicais = ['funk', 'pop', 'rock', 'trap', 'pagode', 'break-dance']
tipos_comida = ['salgado', 'doce', 'bebidas', 'carnes', 'sobremesas', 'massa']
#essa parte do c√≥digo faz controle de raridade da distancia dos usuarios
distancias_pontos = [*range(1, 21)] * 5 + [*range(21, 41)] * 3 + [*range(41, 71)] * 1


# üéâ CAP√çTULO 1: A festa
#aqui come√ßamos a usar POO e criamos a classe festa
#com as principais caracteristicas de uma festa como: nome , local, comida, decora√ß√£o, m√∫sica, comida, nome
class Festa:
    def __init__(self, musica, comida, local, decoracao, Nome):
        self.musica = musica
        self.comida = comida
        self.decoracao = decoracao
        self.local = local
        self.convidados = []
        self.pontos = 20
        self.Nome = Nome
#convidados e pontos foram criados fora dos parenteses

#

#uma fun√ß√£o adicionar_convidado
    def adicionar_convidado(self, convidado):
        self.convidados.append(convidado)
        print(f"\nConvidado {convidado.nome} adicionado! üéâ")
        print(f"Gosta de m√∫sicas: {convidado.gostos_musicais}")
        print(f"Gosta de comidas: {convidado.gostos_comida}")
        print(f"Dist√¢ncia: {convidado.distancia} km | Humor inicial: {convidado.humor}")

    def avaliar_festa(self):
        print("\nüéØ Avaliando a festa...")
        total = 0
        for convidado in self.convidados:
            pontos = convidado.avaliar_festa(self)
            total += pontos
        self.pontos += total
        print(f"\nPontos totais ganhos nesta avalia√ß√£o: {total}")
        print(f"Pontos acumulados da festa: {self.pontos}")

    def melhorar_musica(self):
        if self.pontos >= 20:
            nova = input("Digite um estilo musical para adicionar: ")
            if nova:
                self.musica.append(nova)
                self.pontos -= 20
                print(f"M√∫sica '{nova}' adicionada! üé∂")
            else:
                print("Nenhuma m√∫sica adicionada.")
        else:
            print("Pontos insuficientes.")

    def melhorar_comida(self):
        if self.pontos >= 20:
            nova = input("Digite um tipo de comida para adicionar: ")
            if nova:
                self.comida.append(nova)
                self.pontos -= 20
                print(f"Comida '{nova}' adicionada! üçï")
            else:
                print("Nenhuma comida adicionada.")
        else:
            print("Pontos insuficientes.")

    def adicionar_novo_convidado(self):
        if self.pontos >= 15:
            novo = Convidado()
            self.adicionar_convidado(novo)
            self.pontos -= 15
            print("Novo convidado adicionado por 15 pontos! üë•")
        else:
            print("Pontos insuficientes para adicionar um convidado.")

    def ver_convidados(self):
        print("\nüë• Lista de convidados:")
        for convidado in self.convidados:
            print(f"- {convidado.nome} | M√∫sica: {convidado.gostos_musicais} | Comida: {convidado.gostos_comida} | Dist√¢ncia: {convidado.distancia}km | Humor: {convidado.humor}")


# üéØ CAP√çTULO 2: Nossa Plateia/convidados (depende do nome da festa)
class Convidado:
    def __init__(self):
        self.nome = choice(nomes_possiveis)
        self.gostos_musicais = sample(estilos_musicais, 2)
        self.gostos_comida = sample(tipos_comida, 2)
        self.distancia = choice(distancias_pontos)
        self.humor = randint(30, 70)

    def avaliar_festa(self, festa):
        afinidade = 0

        for musica in festa.musica:
            if musica in self.gostos_musicais:
                afinidade += 10

        for comida in festa.comida:
            if comida in self.gostos_comida:
                afinidade += 10

        if self.distancia > 60:
            multiplicador = 5
        elif self.distancia > 40:
            multiplicador = 3
        elif self.distancia > 20:
            multiplicador = 2
        else:
            multiplicador = 1

        pontos = afinidade * multiplicador
        self.humor = min(100, self.humor + pontos)

        print(f"{self.nome} (dist√¢ncia: {self.distancia} km) gerou {pontos} pontos. Humor atual: {self.humor}")
        return pontos


# üéâ CAP√çTULO 4: O Come√ßo da diver√ß√£o
f = Festa(["pop", "rock"], ["doce", "carnes"], "Rua das Flores", "Luzes e bal√µes","Nirvana")

# Adicionando 5 convidados iniciais
for _ in range(5):
    c = Convidado()
    f.adicionar_convidado(c)


# üéÆ CAP√çTULO FINAL: O Menu (interativo)
while True:
    print(f"\n===== FESTA {f.Nome} =====")
    print("1 - Ver pontos atuais")
    print("2 - Adicionar m√∫sica (20 pontos)")
    print("3 - Adicionar comida (20 pontos)")
    print("4 - Adicionar convidado (15 pontos)")
    print("5 - Avaliar festa")
    print("6 - Ver convidados")
    print("7 - Encerrar festa")
    print("===============================")

    opcao = input("Escolha uma op√ß√£o: ")

    if opcao == "1":
        print(f"\nPontos atuais da festa: {f.pontos}")

    elif opcao == "2":
        f.melhorar_musica()

    elif opcao == "3":
        f.melhorar_comida()

    elif opcao == "4":
        f.adicionar_novo_convidado()

    elif opcao == "5":
        f.avaliar_festa()

    elif opcao == "6":
        f.ver_convidados()

    elif opcao == "7":
        print(f"üéà Festa Encerrada. Seus pontos foram:üîù {f.pontos}üéà")
        break

    else:
        print("Op√ß√£o inv√°lida. Tente novamente.")